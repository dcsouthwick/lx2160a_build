From a6d95d9072fc780289675f2a876059b8542f1464 Mon Sep 17 00:00:00 2001
From: Rabeeh Khoury <rabeeh@solid-run.com>
Date: Mon, 29 Nov 2021 16:01:48 +0200
Subject: [PATCH] lx2160acex7: support u-boot in LSDK-21.08

Signed-off-by: Rabeeh Khoury <rabeeh@solid-run.com>
---
 arch/arm/dts/Makefile                    |   3 +-
 arch/arm/dts/fsl-lx2160a-cex7.dts        |  21 +++
 board/solidrun/lx2160a/ddr.c             |   1 +
 board/solidrun/lx2160a/eth_lx2160acex7.c | 209 ++++++++++++++++-------
 board/solidrun/lx2160a/lx2160a.c         |  67 ++++----
 common/board_r.c                         |   2 +-
 configs/lx2160acex7_tfa_defconfig        |  35 +++-
 include/configs/lx2160a_common.h         |   2 +
 include/configs/lx2160acex7.h            |   2 +
 9 files changed, 239 insertions(+), 103 deletions(-)

diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index 3559b5e0ee..861346835b 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -425,7 +425,8 @@ dtb-$(CONFIG_FSL_LSCH3) += fsl-ls2080a-qds.dtb \
 	fsl-lx2162a-qds-17-x.dtb\
 	fsl-lx2162a-qds-18-x.dtb\
 	fsl-lx2162a-qds-20-x.dtb\
-	fsl-lx2160a-cex7.dtb
+	fsl-lx2160a-cex7.dtb \
+	fsl-lx2162a-som.dtb
 dtb-$(CONFIG_FSL_LSCH2) += fsl-ls1043a-qds-duart.dtb \
 	fsl-ls1043a-qds-lpuart.dtb \
 	fsl-ls1043a-rdb.dtb \
diff --git a/arch/arm/dts/fsl-lx2160a-cex7.dts b/arch/arm/dts/fsl-lx2160a-cex7.dts
index 04adbcf64e..c8c0877e3d 100644
--- a/arch/arm/dts/fsl-lx2160a-cex7.dts
+++ b/arch/arm/dts/fsl-lx2160a-cex7.dts
@@ -21,6 +21,27 @@
 	};
 };
 
+&dpmac17 {
+	status = "okay";
+	phy-handle = <&rgmii_phy1>;
+	phy-connection-type = "rgmii-id";
+};
+
+&emdio1 {
+	status = "okay";
+
+	cortina_phy: ethernet-phy@0 {
+		reg = <0x0>;
+	};
+
+	rgmii_phy1: ethernet-phy@1 {
+		/* AR8035 PHY - "compatible" property not strictly needed */
+		compatible = "ethernet-phy-id004d.d072";
+		reg = <0x1>;
+		/* Poll mode - no "interrupts" property defined */
+	};
+};
+
 &fspi {
 	bus-num = <0>;
 	status = "okay";
diff --git a/board/solidrun/lx2160a/ddr.c b/board/solidrun/lx2160a/ddr.c
index 9c7bd10475..c2f424d4be 100644
--- a/board/solidrun/lx2160a/ddr.c
+++ b/board/solidrun/lx2160a/ddr.c
@@ -6,6 +6,7 @@
 #include <common.h>
 #include <fsl_ddr_sdram.h>
 #include <fsl_ddr_dimm_params.h>
+#include <asm/global_data.h>
 
 DECLARE_GLOBAL_DATA_PTR;
 
diff --git a/board/solidrun/lx2160a/eth_lx2160acex7.c b/board/solidrun/lx2160a/eth_lx2160acex7.c
index 211de59971..eddc449bcd 100644
--- a/board/solidrun/lx2160a/eth_lx2160acex7.c
+++ b/board/solidrun/lx2160a/eth_lx2160acex7.c
@@ -12,11 +12,13 @@
 #include <miiphy.h>
 #include <phy.h>
 #include <fm_eth.h>
+#include <asm/global_data.h>
 #include <i2c.h>
 #include <tlv_eeprom.h>
 #include <asm/io.h>
 #include <exports.h>
 #include <asm/arch/fsl_serdes.h>
+#include <asm/arch-fsl-layerscape/svr.h>
 #include <fsl-mc/fsl_mc.h>
 #include <fsl-mc/ldpaa_wriop.h>
 #include <fsl-mc/fsl_mc_private.h>
@@ -113,70 +115,6 @@ void setup_retimer_25g(int chnum)
 	}
 }
 
-int board_eth_init(bd_t *bis)
-{
-#if defined(CONFIG_FSL_MC_ENET)
-	struct memac_mdio_info mdio_info;
-	struct memac_mdio_controller *reg;
-	int i, interface;
-	struct mii_dev *dev;
-	struct ccsr_gur *gur = (void *)(CONFIG_SYS_FSL_GUTS_ADDR);
-	u32 srds_s1;
-
-	srds_s1 = in_le32(&gur->rcwsr[28]) &
-				FSL_CHASSIS3_RCWSR28_SRDS1_PRTCL_MASK;
-	srds_s1 >>= FSL_CHASSIS3_RCWSR28_SRDS1_PRTCL_SHIFT;
-
-	reg = (struct memac_mdio_controller *)CONFIG_SYS_FSL_WRIOP1_MDIO1;
-	mdio_info.regs = reg;
-	mdio_info.name = DEFAULT_WRIOP_MDIO1_NAME;
-
-	/* Register the EMI 1 */
-	fm_memac_mdio_init(bis, &mdio_info);
-
-	wriop_set_phy_address(WRIOP1_DPMAC17, 0,
-			      RGMII_PHY_ADDR1);
-	reg = (struct memac_mdio_controller *)CONFIG_SYS_FSL_WRIOP1_MDIO2;
-	switch (srds_s1) {
-		case 8:
-			setup_retimer_25g(0);
-			break;
-		case 13:
-		case 14:
-		case 15:
-		case 16:
-		case 17:
-		case 21:
-			/* Setup 25gb retimer on lanes e,f,g,h */
-			setup_retimer_25g(4);
-			break;
-		case 18:
-		case 19:
-			/* Setup 25gb retimer on lanes e,f and 10g on g,h */
-			setup_retimer_25g(2);
-			break;
-
-		default:
-		printf("SerDes1 protocol 0x%x is not supported on LX2160ACEX7\n",
-		       srds_s1);
-	}
-	wriop_set_phy_address(WRIOP1_DPMAC17, 0,
-			      RGMII_PHY_ADDR1);
-	interface = wriop_get_enet_if(WRIOP1_DPMAC17);
-	switch (interface) {
-	case PHY_INTERFACE_MODE_RGMII:
-	case PHY_INTERFACE_MODE_RGMII_ID:
-		dev = miiphy_get_dev_by_name(DEFAULT_WRIOP_MDIO1_NAME);
-		wriop_set_mdio(WRIOP1_DPMAC17, dev);
-	}
-
-	mac_read_from_eeprom();
-	cpu_eth_init(bis);
-#endif /* CONFIG_FSL_MC_ENET */
-
-	return pci_eth_init(bis);
-}
-
 #if defined(CONFIG_RESET_PHY_R)
 void reset_phy(void)
 {
@@ -194,3 +132,146 @@ int fdt_fixup_board_phy(void *fdt)
 
 	return ret;
 }
+
+
+#if defined(CONFIG_DM_ETH) && defined(CONFIG_MULTI_DTB_FIT)
+
+/* Structure to hold SERDES protocols supported in case of
+ * CONFIG_DM_ETH enabled (network interfaces are described in the DTS).
+ *
+ * @serdes_block: the index of the SERDES block
+ * @serdes_protocol: the decimal value of the protocol supported
+ * @dts_needed: DTS notes describing the current configuration are needed
+ *
+ * When dts_needed is true, the board_fit_config_name_match() function
+ * will try to exactly match the current configuration of the block with a DTS
+ * name provided.
+ */
+static struct serdes_configuration {
+	u8 serdes_block;
+	u32 serdes_protocol;
+	bool dts_needed;
+} supported_protocols[] = {
+	/* Serdes block #1 */
+	{1, 2, true},
+	{1, 3, true},
+	{1, 8, true},
+	{1, 15, true},
+	{1, 17, true},
+	{1, 18, true},
+	{1, 20, true},
+
+	/* Serdes block #2 */
+	{2, 2, false},
+	{2, 3, false},
+	{2, 5, false},
+	{2, 10, false},
+	{2, 11, true},
+	{2, 12, true},
+};
+
+#define SUPPORTED_SERDES_PROTOCOLS ARRAY_SIZE(supported_protocols)
+
+static bool protocol_supported(u8 serdes_block, u32 protocol)
+{
+	struct serdes_configuration serdes_conf;
+	int i;
+
+	for (i = 0; i < SUPPORTED_SERDES_PROTOCOLS; i++) {
+		serdes_conf = supported_protocols[i];
+		if (serdes_conf.serdes_block == serdes_block &&
+		    serdes_conf.serdes_protocol == protocol)
+			return true;
+	}
+
+	return false;
+}
+
+static void get_str_protocol(u8 serdes_block, u32 protocol, char *str)
+{
+	struct serdes_configuration serdes_conf;
+	int i;
+
+	for (i = 0; i < SUPPORTED_SERDES_PROTOCOLS; i++) {
+		serdes_conf = supported_protocols[i];
+		if (serdes_conf.serdes_block == serdes_block &&
+		    serdes_conf.serdes_protocol == protocol) {
+			if (serdes_conf.dts_needed == true)
+				sprintf(str, "%u", protocol);
+			else
+				sprintf(str, "x");
+			return;
+		}
+	}
+}
+
+int board_fit_config_name_match(const char *name)
+{
+	if (get_svr() & 0x800) {
+		if (strncmp(name, "fsl-lx2162-som", 14)) return 1;
+	} else {
+		if (strncmp(name, "fsl-lx2160a-cex7", 16)) return 1;
+	}
+
+	return 0;
+}
+
+int fsl_board_late_init(void) {
+	struct ccsr_gur *gur = (void *)(CONFIG_SYS_FSL_GUTS_ADDR);
+	u32 rcw_status = in_le32(&gur->rcwsr[28]);
+	char srds_s1_str[2], srds_s2_str[2];
+	u32 srds_s1, srds_s2;
+	char expected_dts[100];
+
+	if (env_get("fdtfile"))
+		return 0;
+
+	srds_s1 = rcw_status & FSL_CHASSIS3_RCWSR28_SRDS1_PRTCL_MASK;
+	srds_s1 >>= FSL_CHASSIS3_RCWSR28_SRDS1_PRTCL_SHIFT;
+
+	srds_s2 = rcw_status & FSL_CHASSIS3_RCWSR28_SRDS2_PRTCL_MASK;
+	srds_s2 >>= FSL_CHASSIS3_RCWSR28_SRDS2_PRTCL_SHIFT;
+
+
+	/* Check for supported protocols. The default DTS will be used
+	 * in this case
+	 */
+	if (!protocol_supported(1, srds_s1) ||
+	    !protocol_supported(2, srds_s2))
+		return -1;
+
+	get_str_protocol(1, srds_s1, srds_s1_str);
+	get_str_protocol(2, srds_s2, srds_s2_str);
+
+	if (get_svr() & 0x800) { /* LX2162A SOM variants */
+		sprintf(expected_dts, "fsl-lx2162a-som-%s-%s.dtb",
+			srds_s1_str, srds_s2_str);
+	} else {
+		switch (srds_s1) {
+			case 8:
+				setup_retimer_25g(0);
+				break;
+			case 13:
+			case 14:
+			case 15:
+			case 16:
+			case 17:
+			case 21:
+				/* Setup 25gb retimer on lanes e,f,g,h */
+				setup_retimer_25g(4);
+				break;
+			case 18:
+			case 19:
+				/* Setup 25gb retimer on lanes e,f and 10g on g,h */
+				setup_retimer_25g(2);
+				break;
+			default:
+			printf("SerDes1 protocol 0x%x is not supported on LX2160ACEX7\n",
+			       srds_s1);
+		}
+		sprintf(expected_dts, "fsl-lx2160a-clearfog-cx.dtb");
+	}
+	env_set("fdtfile", expected_dts);
+	return 0;
+}
+#endif
diff --git a/board/solidrun/lx2160a/lx2160a.c b/board/solidrun/lx2160a/lx2160a.c
index 8f9251c294..e078ae5c68 100644
--- a/board/solidrun/lx2160a/lx2160a.c
+++ b/board/solidrun/lx2160a/lx2160a.c
@@ -6,6 +6,8 @@
 #include <common.h>
 #include <clock_legacy.h>
 #include <dm.h>
+#include <init.h>
+#include <asm/global_data.h>
 #include <dm/platform_data/serial_pl01x.h>
 #include <i2c.h>
 #include <malloc.h>
@@ -15,7 +17,9 @@
 #include <fsl_sec.h>
 #include <asm/io.h>
 #include <fdt_support.h>
+#include <linux/bitops.h>
 #include <linux/libfdt.h>
+#include <linux/delay.h>
 #include <fsl-mc/fsl_mc.h>
 #include <env_internal.h>
 #include <efi_loader.h>
@@ -28,6 +32,7 @@
 #include "../../freescale/common/vid.h"
 #include <fsl_immap.h>
 #include <asm/arch-fsl-layerscape/fsl_icid.h>
+//#include "lx2160a.h"
 #include <asm/gic-v3.h>
 
 #ifdef CONFIG_EMC2301
@@ -37,7 +42,7 @@
 
 DECLARE_GLOBAL_DATA_PTR;
 
-static struct pl01x_serial_platdata serial0 = {
+static struct pl01x_serial_plat serial0 = {
 #if CONFIG_CONS_INDEX == 0
 	.base = CONFIG_SYS_SERIAL0,
 #elif CONFIG_CONS_INDEX == 1
@@ -48,26 +53,26 @@ static struct pl01x_serial_platdata serial0 = {
 	.type = TYPE_PL011,
 };
 
-U_BOOT_DEVICE(nxp_serial0) = {
+U_BOOT_DRVINFO(nxp_serial0) = {
 	.name = "serial_pl01x",
-	.platdata = &serial0,
+	.plat = &serial0,
 };
 
-static struct pl01x_serial_platdata serial1 = {
+static struct pl01x_serial_plat serial1 = {
 	.base = CONFIG_SYS_SERIAL1,
 	.type = TYPE_PL011,
 };
 
-U_BOOT_DEVICE(nxp_serial1) = {
+U_BOOT_DRVINFO(nxp_serial1) = {
 	.name = "serial_pl01x",
-	.platdata = &serial1,
+	.plat = &serial1,
 };
 
 int select_i2c_ch_pca9547(u8 ch)
 {
 	int ret;
 
-#ifndef CONFIG_DM_I2C
+#if !CONFIG_IS_ENABLED(DM_I2C)
 	ret = i2c_write(I2C_MUX_PCA_ADDR_PRI, 0, 1, &ch, 1);
 #else
 	struct udevice *dev;
@@ -111,9 +116,8 @@ int board_early_init_f(void)
 #ifdef CONFIG_OF_BOARD_FIXUP
 int board_fix_fdt(void *fdt)
 {
-	char *reg_name, *old_str, *new_str;
-	const char *reg_names;
-	int names_len, old_str_len, new_str_len, remaining_str_len;
+	char *reg_names, *reg_name;
+	int names_len, old_name_len, new_name_len, remaining_names_len;
 	struct str_map {
 		char *old_str;
 		char *new_str;
@@ -121,7 +125,7 @@ int board_fix_fdt(void *fdt)
 		{ "ccsr", "dbi" },
 		{ "pf_ctrl", "ctrl" }
 	};
-	int off = -1, i;
+	int off = -1, i = 0;
 
 	if (IS_SVR_REV(get_svr(), 1, 0))
 		return 0;
@@ -131,39 +135,41 @@ int board_fix_fdt(void *fdt)
 		fdt_setprop(fdt, off, "compatible", "fsl,ls-pcie",
 			    strlen("fsl,ls-pcie") + 1);
 
-		reg_names = fdt_getprop(fdt, off, "reg-names", &names_len);
+		reg_names = (char *)fdt_getprop(fdt, off, "reg-names",
+						&names_len);
 		if (!reg_names)
 			continue;
 
-		reg_name = (char *)reg_names;
-		remaining_str_len = names_len - (reg_name - reg_names);
+		reg_name = reg_names;
+		remaining_names_len = names_len - (reg_name - reg_names);
 		i = 0;
-		while ((i < ARRAY_SIZE(reg_names_map)) && remaining_str_len) {
-			old_str = reg_names_map[i].old_str;
-			new_str = reg_names_map[i].new_str;
-			old_str_len = strlen(old_str);
-			new_str_len = strlen(new_str);
-			if (memcmp(reg_name, old_str, old_str_len) == 0) {
+		while ((i < ARRAY_SIZE(reg_names_map)) && remaining_names_len) {
+			old_name_len = strlen(reg_names_map[i].old_str);
+			new_name_len = strlen(reg_names_map[i].new_str);
+			if (memcmp(reg_name, reg_names_map[i].old_str,
+				   old_name_len) == 0) {
 				/* first only leave required bytes for new_str
 				 * and copy rest of the string after it
 				 */
-				memcpy(reg_name + new_str_len,
-				       reg_name + old_str_len,
-				       remaining_str_len - old_str_len);
+				memcpy(reg_name + new_name_len,
+				       reg_name + old_name_len,
+				       remaining_names_len - old_name_len);
 				/* Now copy new_str */
-				memcpy(reg_name, new_str, new_str_len);
-				names_len -= old_str_len;
-				names_len += new_str_len;
+				memcpy(reg_name, reg_names_map[i].new_str,
+				       new_name_len);
+				names_len -= old_name_len;
+				names_len += new_name_len;
 				i++;
 			}
 
-			reg_name = memchr(reg_name, '\0', remaining_str_len);
+			reg_name = memchr(reg_name, '\0', remaining_names_len);
 			if (!reg_name)
 				break;
 
 			reg_name += 1;
 
-			remaining_str_len = names_len - (reg_name - reg_names);
+			remaining_names_len = names_len -
+					      (reg_name - reg_names);
 		}
 
 		fdt_setprop(fdt, off, "reg-names", reg_names, names_len);
@@ -238,6 +244,9 @@ int board_init(void)
 	sec_init();
 #endif
 
+#if !defined(CONFIG_SYS_EARLY_PCI_INIT) && defined(CONFIG_DM_ETH)
+	pci_init();
+#endif
 	return 0;
 }
 
@@ -297,7 +306,7 @@ void board_quiesce_devices(void)
 
 #ifdef CONFIG_OF_BOARD_SETUP
 
-int ft_board_setup(void *blob, bd_t *bd)
+int ft_board_setup(void *blob, struct bd_info *bd)
 {
 	int i;
 	bool mc_memory_bank = false;
diff --git a/common/board_r.c b/common/board_r.c
index aa0fe6b57d..6e7500cd7e 100644
--- a/common/board_r.c
+++ b/common/board_r.c
@@ -755,7 +755,7 @@ static init_fnc_t init_sequence_r[] = {
 #endif
 	INIT_FUNC_WATCHDOG_RESET
 	cpu_secondary_init_r,
-#if defined(CONFIG_ID_EEPROM) || defined(CONFIG_SYS_I2C_MAC_OFFSET)
+#if defined(CONFIG_ID_EEPROM) || defined(CONFIG_SYS_I2C_MAC_OFFSET) || defined(CONFIG_CMD_TLV_EEPROM)
 	mac_read_from_eeprom,
 #endif
 	INIT_FUNC_WATCHDOG_RESET
diff --git a/configs/lx2160acex7_tfa_defconfig b/configs/lx2160acex7_tfa_defconfig
index 8c2a6b338b..ba35686463 100644
--- a/configs/lx2160acex7_tfa_defconfig
+++ b/configs/lx2160acex7_tfa_defconfig
@@ -1,16 +1,20 @@
 CONFIG_ARM=y
+CONFIG_GIC_V3_ITS=y
 CONFIG_TARGET_LX2160ACEX7=y
 CONFIG_TFABOOT=y
 CONFIG_SYS_TEXT_BASE=0x82000000
 CONFIG_SYS_MALLOC_F_LEN=0x6000
+CONFIG_NR_DRAM_BANKS=3
 CONFIG_ENV_SIZE=0x2000
-CONFIG_ENV_SECT_SIZE=0x20000
 CONFIG_ENV_OFFSET=0x500000
+CONFIG_ENV_SECT_SIZE=0x20000
+CONFIG_DM_GPIO=y
 CONFIG_FSPI_AHB_EN_4BYTE=y
-CONFIG_NR_DRAM_BANKS=3
 CONFIG_ARMV8_SEC_FIRMWARE_SUPPORT=y
 CONFIG_SEC_FIRMWARE_ARMV8_PSCI=y
+CONFIG_DEFAULT_DEVICE_TREE="fsl-lx2160a-cex7"
 CONFIG_AHCI=y
+CONFIG_OF_BOARD_FIXUP=y
 CONFIG_FIT_VERBOSE=y
 CONFIG_OF_BOARD_SETUP=y
 CONFIG_OF_STDOUT_VIA_ALIAS=y
@@ -21,9 +25,12 @@ CONFIG_BOOTARGS="console=ttyAMA0,115200 earlycon=pl011,mmio32,0x21c0000 default_
 CONFIG_MISC_INIT_R=y
 CONFIG_CMD_GREPENV=y
 CONFIG_CMD_EEPROM=y
+CONFIG_CMD_DM=y
+CONFIG_CMD_GPIO=y
 CONFIG_CMD_GPT=y
 CONFIG_CMD_I2C=y
 CONFIG_CMD_MMC=y
+CONFIG_CMD_OPTEE_RPMB=y
 CONFIG_CMD_PCI=y
 CONFIG_CMD_SF=y
 CONFIG_CMD_USB=y
@@ -33,24 +40,29 @@ CONFIG_CMD_NVME=y
 CONFIG_NVME=y
 CONFIG_MP=y
 CONFIG_OF_CONTROL=y
-CONFIG_OF_BOARD_FIXUP=y
-CONFIG_DEFAULT_DEVICE_TREE="fsl-lx2160a-cex7"
+CONFIG_OF_LIST="fsl-lx2160a-cex7 fsl-lx2162a-som"
+CONFIG_MULTI_DTB_FIT=y
+CONFIG_ENV_OVERWRITE=y
 CONFIG_ENV_IS_IN_MMC=y
 CONFIG_ENV_IS_IN_SPI_FLASH=y
 CONFIG_ENV_ADDR=0x20500000
 CONFIG_NET_RANDOM_ETHADDR=y
 CONFIG_DM=y
 CONFIG_SATA_CEVA=y
+CONFIG_MPC8XXX_GPIO=y
 CONFIG_FSL_CAAM=y
 CONFIG_DM_GPIO=y
 CONFIG_DM_I2C=y
 CONFIG_MISC=y
 CONFIG_I2C_SET_DEFAULT_BUS_NUM=y
 CONFIG_I2C_DEFAULT_BUS_NUMBER=0
-CONFIG_I2C_EEPROM=y
 CONFIG_I2C_MUX=y
 CONFIG_I2C_MUX_PCA954x=y
 CONFIG_DM_MMC=y
+CONFIG_SUPPORT_EMMC_RPMB=y
+CONFIG_MMC_HS400_SUPPORT=y
+CONFIG_I2C_EEPROM=y
+CONFIG_MTD=y
 CONFIG_FSL_ESDHC=y
 CONFIG_DM_SPI_FLASH=y
 CONFIG_SPI_FLASH=y
@@ -70,21 +82,30 @@ CONFIG_CMD_DHCP=y
 CONFIG_CMD_FAT=y
 CONFIG_CMD_EXT2=y
 CONFIG_CMD_TLV_EEPROM=y
+CONFIG_DM_ETH=y
+CONFIG_DM_MDIO=y
+CONFIG_DM_MDIO_MUX=y
 CONFIG_E1000=y
+CONFIG_MDIO_MUX_I2CREG=y
+CONFIG_FSL_LS_MDIO=y
 CONFIG_PCI=y
 CONFIG_DM_PCI=y
 CONFIG_DM_PCI_COMPAT=y
+CONFIG_PCIE_LAYERSCAPE_RC=y
 CONFIG_PCIE_LAYERSCAPE_GEN4=y
 CONFIG_PHY_ATHEROS=y
-CONFIG_PCIE_LAYERSCAPE=y
 CONFIG_DM_RTC=y
 CONFIG_RTC_PCF2127=y
+CONFIG_RTC_MCP79411=y
 CONFIG_CMD_POWEROFF=y
 CONFIG_DM_SCSI=y
 CONFIG_DM_SERIAL=y
 CONFIG_SPI=y
 CONFIG_DM_SPI=y
+CONFIG_FSL_DSPI=y
 CONFIG_NXP_FSPI=y
+CONFIG_TEE=y
+CONFIG_OPTEE=y
 CONFIG_USB=y
 CONFIG_DM_USB=y
 CONFIG_USB_XHCI_HCD=y
@@ -100,5 +121,3 @@ CONFIG_GIC_V3_ITS=y
 CONFIG_TEE=y
 CONFIG_OPTEE=y
 CONFIG_OPTEE_TA_AVB=y
-CONFIG_SUPPORT_EMMC_RPMB=y
-CONFIG_CMD_OPTEE_RPMB=y
diff --git a/include/configs/lx2160a_common.h b/include/configs/lx2160a_common.h
index 4a9c28858f..44580f6501 100644
--- a/include/configs/lx2160a_common.h
+++ b/include/configs/lx2160a_common.h
@@ -117,6 +117,7 @@
 #define CONFIG_SYS_I2C_RTC_ADDR		0x51  /* Channel 3*/
 
 /* EEPROM */
+#if 0
 #define CONFIG_ID_EEPROM
 #define CONFIG_SYS_I2C_EEPROM_NXID
 #define CONFIG_SYS_EEPROM_BUS_NUM		0
@@ -124,6 +125,7 @@
 #define CONFIG_SYS_I2C_EEPROM_ADDR_LEN		1
 #define CONFIG_SYS_EEPROM_PAGE_WRITE_BITS	3
 #define CONFIG_SYS_EEPROM_PAGE_WRITE_DELAY_MS	5
+#endif
 
 /* QSFP/SFP module EEPROMs */
 #define I2C_SFP_EEPROM_ADDR	0x50
diff --git a/include/configs/lx2160acex7.h b/include/configs/lx2160acex7.h
index d2ef78a243..6e1e4b45a2 100644
--- a/include/configs/lx2160acex7.h
+++ b/include/configs/lx2160acex7.h
@@ -77,6 +77,8 @@
 		"bootm $load_addr#$BOARD\0"
 
 #include <asm/fsl_secure_boot.h>
+#undef CONFIG_SYS_MEMTEST_START
+#undef CONFIG_SYS_MEMTEST_END
 #define CONFIG_SYS_MEMTEST_START		0x2080000000
 #define CONFIG_SYS_MEMTEST_END			0x2400000000
 
-- 
2.25.1

